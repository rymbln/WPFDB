//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_ScienceDegreePerson", "ScienceDegrees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ScienceDegree), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_ScienceStatusPerson", "ScienceStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ScienceStatus), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_SexPerson", "Sexes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Sex), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_SpecialityPerson", "Specialities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Speciality), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonPersonConference", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Person), "PersonConference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConference), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "ConferencePersonConference", "Conference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Conference), "PersonConference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConference), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_CompanyPersonConferenceDetail", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Company), "PersonConferences_Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConferences_Detail), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_CompanyPersonConferenceMoney", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Company), "PersonConferences_Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConferences_Payment), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_PaymentTypePersonConferenceMoney", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.PaymentType), "PersonConferences_Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConferences_Payment), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_Detail_inherits_PersonConference", "PersonConference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.PersonConference), "PersonConferences_Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WPFDB.Model.PersonConferences_Detail), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_Payment_inherits_PersonConference", "PersonConference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.PersonConference), "PersonConferences_Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WPFDB.Model.PersonConferences_Payment), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_RankPersonConferenceDetail", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Rank), "PersonConferences_Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConferences_Detail), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonIacmac", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Person), "Iacmac", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WPFDB.Model.Iacmac), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "ContactTypeEmail", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ContactType), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Email), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "ContactTypePhone", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ContactType), "Phone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Phone), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "ContactTypeAddress", "ContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ContactType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Address), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonAddress", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Person), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Address), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonEmail", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Person), "Email", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Email), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonPhone", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Person), "Phone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Phone), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "PersonConferenceAbstract", "PersonConference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.PersonConference), "Abstract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Abstract), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "AbstractAbstractWork", "Abstract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Abstract), "AbstractWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.AbstractWork), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "AbstractStatusAbstractWork", "AbstractStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.AbstractStatus), "AbstractWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.AbstractWork), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "UserAbstractWork", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.User), "AbstractWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.AbstractWork), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "OrderStatusPersonConferences_Payment", "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.OrderStatus), "PersonConferences_Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.PersonConferences_Payment), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_Badges_BadgeTypes", "BadgeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.BadgeType), "Badge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Badge), true)]

#endregion

namespace WPFDB.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConferenceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ConferenceEntities object using the connection string found in the 'ConferenceEntities' section of the application configuration file.
        /// </summary>
        public ConferenceEntities() : base("name=ConferenceEntities", "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferenceEntities object.
        /// </summary>
        public ConferenceEntities(string connectionString) : base(connectionString, "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferenceEntities object.
        /// </summary>
        public ConferenceEntities(EntityConnection connection) : base(connection, "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScienceDegree> ScienceDegrees
        {
            get
            {
                if ((_ScienceDegrees == null))
                {
                    _ScienceDegrees = base.CreateObjectSet<ScienceDegree>("ScienceDegrees");
                }
                return _ScienceDegrees;
            }
        }
        private ObjectSet<ScienceDegree> _ScienceDegrees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScienceStatus> ScienceStatuses
        {
            get
            {
                if ((_ScienceStatuses == null))
                {
                    _ScienceStatuses = base.CreateObjectSet<ScienceStatus>("ScienceStatuses");
                }
                return _ScienceStatuses;
            }
        }
        private ObjectSet<ScienceStatus> _ScienceStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sex> Sexes
        {
            get
            {
                if ((_Sexes == null))
                {
                    _Sexes = base.CreateObjectSet<Sex>("Sexes");
                }
                return _Sexes;
            }
        }
        private ObjectSet<Sex> _Sexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speciality> Specialities
        {
            get
            {
                if ((_Specialities == null))
                {
                    _Specialities = base.CreateObjectSet<Speciality>("Specialities");
                }
                return _Specialities;
            }
        }
        private ObjectSet<Speciality> _Specialities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Propertie> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Propertie>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Propertie> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conference> Conferences
        {
            get
            {
                if ((_Conferences == null))
                {
                    _Conferences = base.CreateObjectSet<Conference>("Conferences");
                }
                return _Conferences;
            }
        }
        private ObjectSet<Conference> _Conferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonConference> PersonConferences
        {
            get
            {
                if ((_PersonConferences == null))
                {
                    _PersonConferences = base.CreateObjectSet<PersonConference>("PersonConferences");
                }
                return _PersonConferences;
            }
        }
        private ObjectSet<PersonConference> _PersonConferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rank> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Rank>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Rank> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonConferences_Detail> PersonConferences_Detail
        {
            get
            {
                if ((_PersonConferences_Detail == null))
                {
                    _PersonConferences_Detail = base.CreateObjectSet<PersonConferences_Detail>("PersonConferences_Detail");
                }
                return _PersonConferences_Detail;
            }
        }
        private ObjectSet<PersonConferences_Detail> _PersonConferences_Detail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonConferences_Payment> PersonConferences_Payment
        {
            get
            {
                if ((_PersonConferences_Payment == null))
                {
                    _PersonConferences_Payment = base.CreateObjectSet<PersonConferences_Payment>("PersonConferences_Payment");
                }
                return _PersonConferences_Payment;
            }
        }
        private ObjectSet<PersonConferences_Payment> _PersonConferences_Payment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Iacmac> Iacmacs
        {
            get
            {
                if ((_Iacmacs == null))
                {
                    _Iacmacs = base.CreateObjectSet<Iacmac>("Iacmacs");
                }
                return _Iacmacs;
            }
        }
        private ObjectSet<Iacmac> _Iacmacs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderStatus> OrderStatuses
        {
            get
            {
                if ((_OrderStatuses == null))
                {
                    _OrderStatuses = base.CreateObjectSet<OrderStatus>("OrderStatuses");
                }
                return _OrderStatuses;
            }
        }
        private ObjectSet<OrderStatus> _OrderStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactTypes
        {
            get
            {
                if ((_ContactTypes == null))
                {
                    _ContactTypes = base.CreateObjectSet<ContactType>("ContactTypes");
                }
                return _ContactTypes;
            }
        }
        private ObjectSet<ContactType> _ContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Email> Emails
        {
            get
            {
                if ((_Emails == null))
                {
                    _Emails = base.CreateObjectSet<Email>("Emails");
                }
                return _Emails;
            }
        }
        private ObjectSet<Email> _Emails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phone> Phones
        {
            get
            {
                if ((_Phones == null))
                {
                    _Phones = base.CreateObjectSet<Phone>("Phones");
                }
                return _Phones;
            }
        }
        private ObjectSet<Phone> _Phones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Abstract> Abstracts
        {
            get
            {
                if ((_Abstracts == null))
                {
                    _Abstracts = base.CreateObjectSet<Abstract>("Abstracts");
                }
                return _Abstracts;
            }
        }
        private ObjectSet<Abstract> _Abstracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AbstractWork> AbstractWorks
        {
            get
            {
                if ((_AbstractWorks == null))
                {
                    _AbstractWorks = base.CreateObjectSet<AbstractWork>("AbstractWorks");
                }
                return _AbstractWorks;
            }
        }
        private ObjectSet<AbstractWork> _AbstractWorks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AbstractStatus> AbstractStatuses
        {
            get
            {
                if ((_AbstractStatuses == null))
                {
                    _AbstractStatuses = base.CreateObjectSet<AbstractStatus>("AbstractStatuses");
                }
                return _AbstractStatuses;
            }
        }
        private ObjectSet<AbstractStatus> _AbstractStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BadgeType> BadgeTypes
        {
            get
            {
                if ((_BadgeTypes == null))
                {
                    _BadgeTypes = base.CreateObjectSet<BadgeType>("BadgeTypes");
                }
                return _BadgeTypes;
            }
        }
        private ObjectSet<BadgeType> _BadgeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Badge> Badges
        {
            get
            {
                if ((_Badges == null))
                {
                    _Badges = base.CreateObjectSet<Badge>("Badges");
                }
                return _Badges;
            }
        }
        private ObjectSet<Badge> _Badges;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScienceDegrees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScienceDegrees(ScienceDegree scienceDegree)
        {
            base.AddObject("ScienceDegrees", scienceDegree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScienceStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScienceStatuses(ScienceStatus scienceStatus)
        {
            base.AddObject("ScienceStatuses", scienceStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSexes(Sex sex)
        {
            base.AddObject("Sexes", sex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specialities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialities(Speciality speciality)
        {
            base.AddObject("Specialities", speciality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Propertie propertie)
        {
            base.AddObject("Properties", propertie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConferences(Conference conference)
        {
            base.AddObject("Conferences", conference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonConferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonConferences(PersonConference personConference)
        {
            base.AddObject("PersonConferences", personConference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Rank rank)
        {
            base.AddObject("Ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonConferences_Detail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonConferences_Detail(PersonConferences_Detail personConferences_Detail)
        {
            base.AddObject("PersonConferences_Detail", personConferences_Detail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonConferences_Payment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonConferences_Payment(PersonConferences_Payment personConferences_Payment)
        {
            base.AddObject("PersonConferences_Payment", personConferences_Payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Iacmacs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIacmacs(Iacmac iacmac)
        {
            base.AddObject("Iacmacs", iacmac);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderStatuses(OrderStatus orderStatus)
        {
            base.AddObject("OrderStatuses", orderStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTypes(ContactType contactType)
        {
            base.AddObject("ContactTypes", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Emails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmails(Email email)
        {
            base.AddObject("Emails", email);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Phones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhones(Phone phone)
        {
            base.AddObject("Phones", phone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Abstracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAbstracts(Abstract @abstract)
        {
            base.AddObject("Abstracts", @abstract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AbstractWorks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAbstractWorks(AbstractWork abstractWork)
        {
            base.AddObject("AbstractWorks", abstractWork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AbstractStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAbstractStatuses(AbstractStatus abstractStatus)
        {
            base.AddObject("AbstractStatuses", abstractStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BadgeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBadgeTypes(BadgeType badgeType)
        {
            base.AddObject("BadgeTypes", badgeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Badges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBadges(Badge badge)
        {
            base.AddObject("Badges", badge);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Abstract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Abstract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Abstract object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personConferenceId">Initial value of the PersonConferenceId property.</param>
        /// <param name="otherAuthors">Initial value of the OtherAuthors property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Abstract CreateAbstract(global::System.Guid id, global::System.Guid personConferenceId, global::System.String otherAuthors, global::System.String name, global::System.String text, global::System.String link, global::System.Int32 sourceId)
        {
            Abstract @abstract = new Abstract();
            @abstract.Id = id;
            @abstract.PersonConferenceId = personConferenceId;
            @abstract.OtherAuthors = otherAuthors;
            @abstract.Name = name;
            @abstract.Text = text;
            @abstract.Link = link;
            @abstract.SourceId = sourceId;
            return @abstract;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonConferenceId
        {
            get
            {
                return _PersonConferenceId;
            }
            set
            {
                OnPersonConferenceIdChanging(value);
                ReportPropertyChanging("PersonConferenceId");
                _PersonConferenceId = StructuralObject.SetValidValue(value, "PersonConferenceId");
                ReportPropertyChanged("PersonConferenceId");
                OnPersonConferenceIdChanged();
            }
        }
        private global::System.Guid _PersonConferenceId;
        partial void OnPersonConferenceIdChanging(global::System.Guid value);
        partial void OnPersonConferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OtherAuthors
        {
            get
            {
                return _OtherAuthors;
            }
            set
            {
                OnOtherAuthorsChanging(value);
                ReportPropertyChanging("OtherAuthors");
                _OtherAuthors = StructuralObject.SetValidValue(value, false, "OtherAuthors");
                ReportPropertyChanged("OtherAuthors");
                OnOtherAuthorsChanged();
            }
        }
        private global::System.String _OtherAuthors;
        partial void OnOtherAuthorsChanging(global::System.String value);
        partial void OnOtherAuthorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false, "Link");
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonConferenceAbstract", "PersonConference")]
        public PersonConference PersonConference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.PersonConferenceAbstract", "PersonConference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.PersonConferenceAbstract", "PersonConference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonConference> PersonConferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.PersonConferenceAbstract", "PersonConference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonConference>("ConferenceModel.PersonConferenceAbstract", "PersonConference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "AbstractAbstractWork", "AbstractWork")]
        public EntityCollection<AbstractWork> AbstractWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AbstractWork>("ConferenceModel.AbstractAbstractWork", "AbstractWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AbstractWork>("ConferenceModel.AbstractAbstractWork", "AbstractWork", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="AbstractStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AbstractStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AbstractStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static AbstractStatus CreateAbstractStatus(global::System.Guid id, global::System.String code, global::System.String name, global::System.Int32 sourceId)
        {
            AbstractStatus abstractStatus = new AbstractStatus();
            abstractStatus.Id = id;
            abstractStatus.Code = code;
            abstractStatus.Name = name;
            abstractStatus.SourceId = sourceId;
            return abstractStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "AbstractStatusAbstractWork", "AbstractWork")]
        public EntityCollection<AbstractWork> AbstractWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AbstractWork>("ConferenceModel.AbstractStatusAbstractWork", "AbstractWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AbstractWork>("ConferenceModel.AbstractStatusAbstractWork", "AbstractWork", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="AbstractWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AbstractWork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AbstractWork object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="abstractId">Initial value of the AbstractId property.</param>
        /// <param name="abstractStatusId">Initial value of the AbstractStatusId property.</param>
        /// <param name="abstractResponsiblePersonId">Initial value of the AbstractResponsiblePersonId property.</param>
        /// <param name="isSentByEmail">Initial value of the IsSentByEmail property.</param>
        /// <param name="dateWork">Initial value of the DateWork property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="reviewerId">Initial value of the ReviewerId property.</param>
        public static AbstractWork CreateAbstractWork(global::System.Guid id, global::System.Guid abstractId, global::System.Guid abstractStatusId, global::System.Guid abstractResponsiblePersonId, global::System.Boolean isSentByEmail, global::System.DateTime dateWork, global::System.Int32 sourceId, global::System.Guid reviewerId)
        {
            AbstractWork abstractWork = new AbstractWork();
            abstractWork.Id = id;
            abstractWork.AbstractId = abstractId;
            abstractWork.AbstractStatusId = abstractStatusId;
            abstractWork.AbstractResponsiblePersonId = abstractResponsiblePersonId;
            abstractWork.IsSentByEmail = isSentByEmail;
            abstractWork.DateWork = dateWork;
            abstractWork.SourceId = sourceId;
            abstractWork.ReviewerId = reviewerId;
            return abstractWork;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AbstractId
        {
            get
            {
                return _AbstractId;
            }
            set
            {
                OnAbstractIdChanging(value);
                ReportPropertyChanging("AbstractId");
                _AbstractId = StructuralObject.SetValidValue(value, "AbstractId");
                ReportPropertyChanged("AbstractId");
                OnAbstractIdChanged();
            }
        }
        private global::System.Guid _AbstractId;
        partial void OnAbstractIdChanging(global::System.Guid value);
        partial void OnAbstractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AbstractStatusId
        {
            get
            {
                return _AbstractStatusId;
            }
            set
            {
                OnAbstractStatusIdChanging(value);
                ReportPropertyChanging("AbstractStatusId");
                _AbstractStatusId = StructuralObject.SetValidValue(value, "AbstractStatusId");
                ReportPropertyChanged("AbstractStatusId");
                OnAbstractStatusIdChanged();
            }
        }
        private global::System.Guid _AbstractStatusId;
        partial void OnAbstractStatusIdChanging(global::System.Guid value);
        partial void OnAbstractStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AbstractResponsiblePersonId
        {
            get
            {
                return _AbstractResponsiblePersonId;
            }
            set
            {
                OnAbstractResponsiblePersonIdChanging(value);
                ReportPropertyChanging("AbstractResponsiblePersonId");
                _AbstractResponsiblePersonId = StructuralObject.SetValidValue(value, "AbstractResponsiblePersonId");
                ReportPropertyChanged("AbstractResponsiblePersonId");
                OnAbstractResponsiblePersonIdChanged();
            }
        }
        private global::System.Guid _AbstractResponsiblePersonId;
        partial void OnAbstractResponsiblePersonIdChanging(global::System.Guid value);
        partial void OnAbstractResponsiblePersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSentByEmail
        {
            get
            {
                return _IsSentByEmail;
            }
            set
            {
                OnIsSentByEmailChanging(value);
                ReportPropertyChanging("IsSentByEmail");
                _IsSentByEmail = StructuralObject.SetValidValue(value, "IsSentByEmail");
                ReportPropertyChanged("IsSentByEmail");
                OnIsSentByEmailChanged();
            }
        }
        private global::System.Boolean _IsSentByEmail;
        partial void OnIsSentByEmailChanging(global::System.Boolean value);
        partial void OnIsSentByEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateWork
        {
            get
            {
                return _DateWork;
            }
            set
            {
                OnDateWorkChanging(value);
                ReportPropertyChanging("DateWork");
                _DateWork = StructuralObject.SetValidValue(value, "DateWork");
                ReportPropertyChanged("DateWork");
                OnDateWorkChanged();
            }
        }
        private global::System.DateTime _DateWork;
        partial void OnDateWorkChanging(global::System.DateTime value);
        partial void OnDateWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReviewerId
        {
            get
            {
                return _ReviewerId;
            }
            set
            {
                OnReviewerIdChanging(value);
                ReportPropertyChanging("ReviewerId");
                _ReviewerId = StructuralObject.SetValidValue(value, "ReviewerId");
                ReportPropertyChanged("ReviewerId");
                OnReviewerIdChanged();
            }
        }
        private global::System.Guid _ReviewerId;
        partial void OnReviewerIdChanging(global::System.Guid value);
        partial void OnReviewerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "AbstractAbstractWork", "Abstract")]
        public Abstract Abstract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abstract>("ConferenceModel.AbstractAbstractWork", "Abstract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abstract>("ConferenceModel.AbstractAbstractWork", "Abstract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Abstract> AbstractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abstract>("ConferenceModel.AbstractAbstractWork", "Abstract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Abstract>("ConferenceModel.AbstractAbstractWork", "Abstract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "AbstractStatusAbstractWork", "AbstractStatus")]
        public AbstractStatus AbstractStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AbstractStatus>("ConferenceModel.AbstractStatusAbstractWork", "AbstractStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AbstractStatus>("ConferenceModel.AbstractStatusAbstractWork", "AbstractStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AbstractStatus> AbstractStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AbstractStatus>("ConferenceModel.AbstractStatusAbstractWork", "AbstractStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AbstractStatus>("ConferenceModel.AbstractStatusAbstractWork", "AbstractStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "UserAbstractWork", "User")]
        public User Reviewer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ConferenceModel.UserAbstractWork", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ConferenceModel.UserAbstractWork", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ReviewerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ConferenceModel.UserAbstractWork", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ConferenceModel.UserAbstractWork", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactTypeId">Initial value of the ContactTypeId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="streetHouseName">Initial value of the StreetHouseName property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Address CreateAddress(global::System.Guid id, global::System.Guid contactTypeId, global::System.Guid personId, global::System.String zipCode, global::System.String countryName, global::System.String regionName, global::System.String cityName, global::System.String streetHouseName, global::System.Int32 sourceId)
        {
            Address address = new Address();
            address.Id = id;
            address.ContactTypeId = contactTypeId;
            address.PersonId = personId;
            address.ZipCode = zipCode;
            address.CountryName = countryName;
            address.RegionName = regionName;
            address.CityName = cityName;
            address.StreetHouseName = streetHouseName;
            address.SourceId = sourceId;
            return address;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactTypeId
        {
            get
            {
                return _ContactTypeId;
            }
            set
            {
                OnContactTypeIdChanging(value);
                ReportPropertyChanging("ContactTypeId");
                _ContactTypeId = StructuralObject.SetValidValue(value, "ContactTypeId");
                ReportPropertyChanged("ContactTypeId");
                OnContactTypeIdChanged();
            }
        }
        private global::System.Guid _ContactTypeId;
        partial void OnContactTypeIdChanging(global::System.Guid value);
        partial void OnContactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false, "CountryName");
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false, "RegionName");
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StreetHouseName
        {
            get
            {
                return _StreetHouseName;
            }
            set
            {
                OnStreetHouseNameChanging(value);
                ReportPropertyChanging("StreetHouseName");
                _StreetHouseName = StructuralObject.SetValidValue(value, false, "StreetHouseName");
                ReportPropertyChanged("StreetHouseName");
                OnStreetHouseNameChanged();
            }
        }
        private global::System.String _StreetHouseName;
        partial void OnStreetHouseNameChanging(global::System.String value);
        partial void OnStreetHouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypeAddress", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeAddress", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeAddress", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeAddress", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("ConferenceModel.ContactTypeAddress", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonAddress", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonAddress", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonAddress", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonAddress", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ConferenceModel.PersonAddress", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Badge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Badge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Badge object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="badgeTypeId">Initial value of the BadgeTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="positionX1">Initial value of the PositionX1 property.</param>
        /// <param name="positionY1">Initial value of the PositionY1 property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="roundCorner">Initial value of the RoundCorner property.</param>
        /// <param name="foregroundColor">Initial value of the ForegroundColor property.</param>
        /// <param name="backgroundColor">Initial value of the BackgroundColor property.</param>
        /// <param name="font">Initial value of the Font property.</param>
        /// <param name="fontColor">Initial value of the FontColor property.</param>
        /// <param name="fontSize">Initial value of the FontSize property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Badge CreateBadge(global::System.Guid id, global::System.Guid badgeTypeId, global::System.String name, global::System.Int32 positionX1, global::System.Int32 positionY1, global::System.Int32 width, global::System.Int32 height, global::System.Int32 roundCorner, global::System.String foregroundColor, global::System.String backgroundColor, global::System.String font, global::System.String fontColor, global::System.Int32 fontSize, global::System.String value, global::System.Int32 sourceId)
        {
            Badge badge = new Badge();
            badge.Id = id;
            badge.BadgeTypeId = badgeTypeId;
            badge.Name = name;
            badge.PositionX1 = positionX1;
            badge.PositionY1 = positionY1;
            badge.Width = width;
            badge.Height = height;
            badge.RoundCorner = roundCorner;
            badge.ForegroundColor = foregroundColor;
            badge.BackgroundColor = backgroundColor;
            badge.Font = font;
            badge.FontColor = fontColor;
            badge.FontSize = fontSize;
            badge.Value = value;
            badge.SourceId = sourceId;
            return badge;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BadgeTypeId
        {
            get
            {
                return _BadgeTypeId;
            }
            set
            {
                OnBadgeTypeIdChanging(value);
                ReportPropertyChanging("BadgeTypeId");
                _BadgeTypeId = StructuralObject.SetValidValue(value, "BadgeTypeId");
                ReportPropertyChanged("BadgeTypeId");
                OnBadgeTypeIdChanged();
            }
        }
        private global::System.Guid _BadgeTypeId;
        partial void OnBadgeTypeIdChanging(global::System.Guid value);
        partial void OnBadgeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionX1
        {
            get
            {
                return _PositionX1;
            }
            set
            {
                OnPositionX1Changing(value);
                ReportPropertyChanging("PositionX1");
                _PositionX1 = StructuralObject.SetValidValue(value, "PositionX1");
                ReportPropertyChanged("PositionX1");
                OnPositionX1Changed();
            }
        }
        private global::System.Int32 _PositionX1;
        partial void OnPositionX1Changing(global::System.Int32 value);
        partial void OnPositionX1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionY1
        {
            get
            {
                return _PositionY1;
            }
            set
            {
                OnPositionY1Changing(value);
                ReportPropertyChanging("PositionY1");
                _PositionY1 = StructuralObject.SetValidValue(value, "PositionY1");
                ReportPropertyChanged("PositionY1");
                OnPositionY1Changed();
            }
        }
        private global::System.Int32 _PositionY1;
        partial void OnPositionY1Changing(global::System.Int32 value);
        partial void OnPositionY1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundCorner
        {
            get
            {
                return _RoundCorner;
            }
            set
            {
                OnRoundCornerChanging(value);
                ReportPropertyChanging("RoundCorner");
                _RoundCorner = StructuralObject.SetValidValue(value, "RoundCorner");
                ReportPropertyChanged("RoundCorner");
                OnRoundCornerChanged();
            }
        }
        private global::System.Int32 _RoundCorner;
        partial void OnRoundCornerChanging(global::System.Int32 value);
        partial void OnRoundCornerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ForegroundColor
        {
            get
            {
                return _ForegroundColor;
            }
            set
            {
                OnForegroundColorChanging(value);
                ReportPropertyChanging("ForegroundColor");
                _ForegroundColor = StructuralObject.SetValidValue(value, false, "ForegroundColor");
                ReportPropertyChanged("ForegroundColor");
                OnForegroundColorChanged();
            }
        }
        private global::System.String _ForegroundColor;
        partial void OnForegroundColorChanging(global::System.String value);
        partial void OnForegroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundColor
        {
            get
            {
                return _BackgroundColor;
            }
            set
            {
                OnBackgroundColorChanging(value);
                ReportPropertyChanging("BackgroundColor");
                _BackgroundColor = StructuralObject.SetValidValue(value, false, "BackgroundColor");
                ReportPropertyChanged("BackgroundColor");
                OnBackgroundColorChanged();
            }
        }
        private global::System.String _BackgroundColor;
        partial void OnBackgroundColorChanging(global::System.String value);
        partial void OnBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Font
        {
            get
            {
                return _Font;
            }
            set
            {
                OnFontChanging(value);
                ReportPropertyChanging("Font");
                _Font = StructuralObject.SetValidValue(value, false, "Font");
                ReportPropertyChanged("Font");
                OnFontChanged();
            }
        }
        private global::System.String _Font;
        partial void OnFontChanging(global::System.String value);
        partial void OnFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FontStyle
        {
            get
            {
                return _FontStyle;
            }
            set
            {
                OnFontStyleChanging(value);
                ReportPropertyChanging("FontStyle");
                _FontStyle = StructuralObject.SetValidValue(value, true, "FontStyle");
                ReportPropertyChanged("FontStyle");
                OnFontStyleChanged();
            }
        }
        private global::System.String _FontStyle;
        partial void OnFontStyleChanging(global::System.String value);
        partial void OnFontStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FontColor
        {
            get
            {
                return _FontColor;
            }
            set
            {
                OnFontColorChanging(value);
                ReportPropertyChanging("FontColor");
                _FontColor = StructuralObject.SetValidValue(value, false, "FontColor");
                ReportPropertyChanged("FontColor");
                OnFontColorChanged();
            }
        }
        private global::System.String _FontColor;
        partial void OnFontColorChanging(global::System.String value);
        partial void OnFontColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FontSize
        {
            get
            {
                return _FontSize;
            }
            set
            {
                OnFontSizeChanging(value);
                ReportPropertyChanging("FontSize");
                _FontSize = StructuralObject.SetValidValue(value, "FontSize");
                ReportPropertyChanged("FontSize");
                OnFontSizeChanged();
            }
        }
        private global::System.Int32 _FontSize;
        partial void OnFontSizeChanging(global::System.Int32 value);
        partial void OnFontSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BorderWidth
        {
            get
            {
                return _BorderWidth;
            }
            set
            {
                OnBorderWidthChanging(value);
                ReportPropertyChanging("BorderWidth");
                _BorderWidth = StructuralObject.SetValidValue(value, "BorderWidth");
                ReportPropertyChanged("BorderWidth");
                OnBorderWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _BorderWidth;
        partial void OnBorderWidthChanging(Nullable<global::System.Int32> value);
        partial void OnBorderWidthChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Badges_BadgeTypes", "BadgeType")]
        public BadgeType BadgeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadgeType>("ConferenceModel.FK_Badges_BadgeTypes", "BadgeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadgeType>("ConferenceModel.FK_Badges_BadgeTypes", "BadgeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BadgeType> BadgeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadgeType>("ConferenceModel.FK_Badges_BadgeTypes", "BadgeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BadgeType>("ConferenceModel.FK_Badges_BadgeTypes", "BadgeType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="BadgeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BadgeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BadgeType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static BadgeType CreateBadgeType(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 width, global::System.Int32 height, global::System.Int32 sourceId)
        {
            BadgeType badgeType = new BadgeType();
            badgeType.Id = id;
            badgeType.Name = name;
            badgeType.Code = code;
            badgeType.Width = width;
            badgeType.Height = height;
            badgeType.SourceId = sourceId;
            return badgeType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Badges_BadgeTypes", "Badge")]
        public EntityCollection<Badge> Badges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Badge>("ConferenceModel.FK_Badges_BadgeTypes", "Badge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Badge>("ConferenceModel.FK_Badges_BadgeTypes", "Badge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Company CreateCompany(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            Company company = new Company();
            company.Id = id;
            company.Name = name;
            company.Code = code;
            company.SourceId = sourceId;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_CompanyPersonConferenceDetail", "PersonConferences_Detail")]
        public EntityCollection<PersonConferences_Detail> PersonConferences_Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConferences_Detail>("ConferenceModel.FK_CompanyPersonConferenceDetail", "PersonConferences_Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConferences_Detail>("ConferenceModel.FK_CompanyPersonConferenceDetail", "PersonConferences_Detail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_CompanyPersonConferenceMoney", "PersonConferences_Payment")]
        public EntityCollection<PersonConferences_Payment> PersonConferences_Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConferences_Payment>("ConferenceModel.FK_CompanyPersonConferenceMoney", "PersonConferences_Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConferences_Payment>("ConferenceModel.FK_CompanyPersonConferenceMoney", "PersonConferences_Payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Conference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Conference CreateConference(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            Conference conference = new Conference();
            conference.Id = id;
            conference.Name = name;
            conference.Code = code;
            conference.SourceId = sourceId;
            return conference;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ConferencePersonConference", "PersonConference")]
        public EntityCollection<PersonConference> PersonConferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConference>("ConferenceModel.ConferencePersonConference", "PersonConference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConference>("ConferenceModel.ConferencePersonConference", "PersonConference", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static ContactType CreateContactType(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            ContactType contactType = new ContactType();
            contactType.Id = id;
            contactType.Name = name;
            contactType.Code = code;
            contactType.SourceId = sourceId;
            return contactType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypeEmail", "Email")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("ConferenceModel.ContactTypeEmail", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("ConferenceModel.ContactTypeEmail", "Email", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypePhone", "Phone")]
        public EntityCollection<Phone> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phone>("ConferenceModel.ContactTypePhone", "Phone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phone>("ConferenceModel.ContactTypePhone", "Phone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypeAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("ConferenceModel.ContactTypeAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("ConferenceModel.ContactTypeAddress", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Email")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Email : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Email object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactTypeId">Initial value of the ContactTypeId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Email CreateEmail(global::System.Guid id, global::System.Guid contactTypeId, global::System.Guid personId, global::System.String name, global::System.Int32 sourceId)
        {
            Email email = new Email();
            email.Id = id;
            email.ContactTypeId = contactTypeId;
            email.PersonId = personId;
            email.Name = name;
            email.SourceId = sourceId;
            return email;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactTypeId
        {
            get
            {
                return _ContactTypeId;
            }
            set
            {
                OnContactTypeIdChanging(value);
                ReportPropertyChanging("ContactTypeId");
                _ContactTypeId = StructuralObject.SetValidValue(value, "ContactTypeId");
                ReportPropertyChanged("ContactTypeId");
                OnContactTypeIdChanged();
            }
        }
        private global::System.Guid _ContactTypeId;
        partial void OnContactTypeIdChanging(global::System.Guid value);
        partial void OnContactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypeEmail", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeEmail", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeEmail", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypeEmail", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("ConferenceModel.ContactTypeEmail", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonEmail", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonEmail", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonEmail", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonEmail", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ConferenceModel.PersonEmail", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Iacmac")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Iacmac : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Iacmac object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="isMember">Initial value of the IsMember property.</param>
        /// <param name="isCardCreate">Initial value of the IsCardCreate property.</param>
        /// <param name="isCardSent">Initial value of the IsCardSent property.</param>
        /// <param name="isForm">Initial value of the IsForm property.</param>
        public static Iacmac CreateIacmac(global::System.Guid personId, global::System.Int32 number, global::System.Boolean isMember, global::System.Boolean isCardCreate, global::System.Boolean isCardSent, global::System.Boolean isForm)
        {
            Iacmac iacmac = new Iacmac();
            iacmac.PersonId = personId;
            iacmac.Number = number;
            iacmac.IsMember = isMember;
            iacmac.IsCardCreate = isCardCreate;
            iacmac.IsCardSent = isCardSent;
            iacmac.IsForm = isForm;
            return iacmac;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMember
        {
            get
            {
                return _IsMember;
            }
            set
            {
                OnIsMemberChanging(value);
                ReportPropertyChanging("IsMember");
                _IsMember = StructuralObject.SetValidValue(value, "IsMember");
                ReportPropertyChanged("IsMember");
                OnIsMemberChanged();
            }
        }
        private global::System.Boolean _IsMember;
        partial void OnIsMemberChanging(global::System.Boolean value);
        partial void OnIsMemberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateRegistration
        {
            get
            {
                return _DateRegistration;
            }
            set
            {
                OnDateRegistrationChanging(value);
                ReportPropertyChanging("DateRegistration");
                _DateRegistration = StructuralObject.SetValidValue(value, "DateRegistration");
                ReportPropertyChanged("DateRegistration");
                OnDateRegistrationChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateRegistration;
        partial void OnDateRegistrationChanging(Nullable<global::System.DateTime> value);
        partial void OnDateRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCardCreate
        {
            get
            {
                return _IsCardCreate;
            }
            set
            {
                OnIsCardCreateChanging(value);
                ReportPropertyChanging("IsCardCreate");
                _IsCardCreate = StructuralObject.SetValidValue(value, "IsCardCreate");
                ReportPropertyChanged("IsCardCreate");
                OnIsCardCreateChanged();
            }
        }
        private global::System.Boolean _IsCardCreate;
        partial void OnIsCardCreateChanging(global::System.Boolean value);
        partial void OnIsCardCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCardSent
        {
            get
            {
                return _IsCardSent;
            }
            set
            {
                OnIsCardSentChanging(value);
                ReportPropertyChanging("IsCardSent");
                _IsCardSent = StructuralObject.SetValidValue(value, "IsCardSent");
                ReportPropertyChanged("IsCardSent");
                OnIsCardSentChanged();
            }
        }
        private global::System.Boolean _IsCardSent;
        partial void OnIsCardSentChanging(global::System.Boolean value);
        partial void OnIsCardSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForm
        {
            get
            {
                return _IsForm;
            }
            set
            {
                OnIsFormChanging(value);
                ReportPropertyChanging("IsForm");
                _IsForm = StructuralObject.SetValidValue(value, "IsForm");
                ReportPropertyChanged("IsForm");
                OnIsFormChanged();
            }
        }
        private global::System.Boolean _IsForm;
        partial void OnIsFormChanging(global::System.Boolean value);
        partial void OnIsFormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonIacmac", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonIacmac", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonIacmac", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonIacmac", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ConferenceModel.PersonIacmac", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="OrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static OrderStatus CreateOrderStatus(global::System.Guid id, global::System.String code, global::System.String name, global::System.Int32 sourceId)
        {
            OrderStatus orderStatus = new OrderStatus();
            orderStatus.Id = id;
            orderStatus.Code = code;
            orderStatus.Name = name;
            orderStatus.SourceId = sourceId;
            return orderStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "OrderStatusPersonConferences_Payment", "PersonConferences_Payment")]
        public EntityCollection<PersonConferences_Payment> OrderStatusId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConferences_Payment>("ConferenceModel.OrderStatusPersonConferences_Payment", "PersonConferences_Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConferences_Payment>("ConferenceModel.OrderStatusPersonConferences_Payment", "PersonConferences_Payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static PaymentType CreatePaymentType(global::System.Guid id, global::System.String code, global::System.String name, global::System.Int32 sourceId)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.Id = id;
            paymentType.Code = code;
            paymentType.Name = name;
            paymentType.SourceId = sourceId;
            return paymentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_PaymentTypePersonConferenceMoney", "PersonConferences_Payment")]
        public EntityCollection<PersonConferences_Payment> PersonConferences_Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConferences_Payment>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PersonConferences_Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConferences_Payment>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PersonConferences_Payment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="secondName">Initial value of the SecondName property.</param>
        /// <param name="thirdName">Initial value of the ThirdName property.</param>
        /// <param name="sexId">Initial value of the SexId property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        /// <param name="scienceDegreeId">Initial value of the ScienceDegreeId property.</param>
        /// <param name="scienceStatusId">Initial value of the ScienceStatusId property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Person CreatePerson(global::System.Guid id, global::System.String firstName, global::System.String secondName, global::System.String thirdName, global::System.Guid sexId, global::System.Guid specialityId, global::System.Guid scienceDegreeId, global::System.Guid scienceStatusId, global::System.Int32 sourceId)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.SecondName = secondName;
            person.ThirdName = thirdName;
            person.SexId = sexId;
            person.SpecialityId = specialityId;
            person.ScienceDegreeId = scienceDegreeId;
            person.ScienceStatusId = scienceStatusId;
            person.SourceId = sourceId;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, false, "SecondName");
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThirdName
        {
            get
            {
                return _ThirdName;
            }
            set
            {
                OnThirdNameChanging(value);
                ReportPropertyChanging("ThirdName");
                _ThirdName = StructuralObject.SetValidValue(value, false, "ThirdName");
                ReportPropertyChanged("ThirdName");
                OnThirdNameChanged();
            }
        }
        private global::System.String _ThirdName;
        partial void OnThirdNameChanging(global::System.String value);
        partial void OnThirdNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SexId
        {
            get
            {
                return _SexId;
            }
            set
            {
                OnSexIdChanging(value);
                ReportPropertyChanging("SexId");
                _SexId = StructuralObject.SetValidValue(value, "SexId");
                ReportPropertyChanged("SexId");
                OnSexIdChanged();
            }
        }
        private global::System.Guid _SexId;
        partial void OnSexIdChanging(global::System.Guid value);
        partial void OnSexIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, true, "WorkPlace");
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, true, "Post");
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value, "SpecialityId");
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScienceDegreeId
        {
            get
            {
                return _ScienceDegreeId;
            }
            set
            {
                OnScienceDegreeIdChanging(value);
                ReportPropertyChanging("ScienceDegreeId");
                _ScienceDegreeId = StructuralObject.SetValidValue(value, "ScienceDegreeId");
                ReportPropertyChanged("ScienceDegreeId");
                OnScienceDegreeIdChanged();
            }
        }
        private global::System.Guid _ScienceDegreeId;
        partial void OnScienceDegreeIdChanging(global::System.Guid value);
        partial void OnScienceDegreeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScienceStatusId
        {
            get
            {
                return _ScienceStatusId;
            }
            set
            {
                OnScienceStatusIdChanging(value);
                ReportPropertyChanging("ScienceStatusId");
                _ScienceStatusId = StructuralObject.SetValidValue(value, "ScienceStatusId");
                ReportPropertyChanged("ScienceStatusId");
                OnScienceStatusIdChanged();
            }
        }
        private global::System.Guid _ScienceStatusId;
        partial void OnScienceStatusIdChanging(global::System.Guid value);
        partial void OnScienceStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceDegreePerson", "ScienceDegrees")]
        public ScienceDegree ScienceDegree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScienceDegree> ScienceDegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceStatusPerson", "ScienceStatuses")]
        public ScienceStatus ScienceStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScienceStatus> ScienceStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SexPerson", "Sexes")]
        public Sex Sex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sex> SexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SpecialityPerson", "Specialities")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonPersonConference", "PersonConference")]
        public EntityCollection<PersonConference> PersonConferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConference>("ConferenceModel.PersonPersonConference", "PersonConference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConference>("ConferenceModel.PersonPersonConference", "PersonConference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonIacmac", "Iacmac")]
        public Iacmac Iacmac
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iacmac>("ConferenceModel.PersonIacmac", "Iacmac").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iacmac>("ConferenceModel.PersonIacmac", "Iacmac").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iacmac> IacmacReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iacmac>("ConferenceModel.PersonIacmac", "Iacmac");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iacmac>("ConferenceModel.PersonIacmac", "Iacmac", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("ConferenceModel.PersonAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("ConferenceModel.PersonAddress", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonEmail", "Email")]
        public EntityCollection<Email> Emails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Email>("ConferenceModel.PersonEmail", "Email");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Email>("ConferenceModel.PersonEmail", "Email", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonPhone", "Phone")]
        public EntityCollection<Phone> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phone>("ConferenceModel.PersonPhone", "Phone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phone>("ConferenceModel.PersonPhone", "Phone", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="PersonConference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonConference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonConference object.
        /// </summary>
        /// <param name="personConferenceId">Initial value of the PersonConferenceId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="conferenceId">Initial value of the ConferenceId property.</param>
        public static PersonConference CreatePersonConference(global::System.Guid personConferenceId, global::System.Guid personId, global::System.Guid conferenceId)
        {
            PersonConference personConference = new PersonConference();
            personConference.PersonConferenceId = personConferenceId;
            personConference.PersonId = personId;
            personConference.ConferenceId = conferenceId;
            return personConference;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonConferenceId
        {
            get
            {
                return _PersonConferenceId;
            }
            set
            {
                if (_PersonConferenceId != value)
                {
                    OnPersonConferenceIdChanging(value);
                    ReportPropertyChanging("PersonConferenceId");
                    _PersonConferenceId = StructuralObject.SetValidValue(value, "PersonConferenceId");
                    ReportPropertyChanged("PersonConferenceId");
                    OnPersonConferenceIdChanged();
                }
            }
        }
        private global::System.Guid _PersonConferenceId;
        partial void OnPersonConferenceIdChanging(global::System.Guid value);
        partial void OnPersonConferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConferenceId
        {
            get
            {
                return _ConferenceId;
            }
            set
            {
                OnConferenceIdChanging(value);
                ReportPropertyChanging("ConferenceId");
                _ConferenceId = StructuralObject.SetValidValue(value, "ConferenceId");
                ReportPropertyChanged("ConferenceId");
                OnConferenceIdChanged();
            }
        }
        private global::System.Guid _ConferenceId;
        partial void OnConferenceIdChanging(global::System.Guid value);
        partial void OnConferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonPersonConference", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPersonConference", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPersonConference", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPersonConference", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ConferenceModel.PersonPersonConference", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ConferencePersonConference", "Conference")]
        public Conference Conference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("ConferenceModel.ConferencePersonConference", "Conference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("ConferenceModel.ConferencePersonConference", "Conference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conference> ConferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("ConferenceModel.ConferencePersonConference", "Conference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conference>("ConferenceModel.ConferencePersonConference", "Conference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Detail_inherits_PersonConference", "PersonConferences_Detail")]
        public PersonConferences_Detail PersonConferences_Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Detail>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConferences_Detail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Detail>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConferences_Detail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonConferences_Detail> PersonConferences_DetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Detail>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConferences_Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonConferences_Detail>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConferences_Detail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Payment_inherits_PersonConference", "PersonConferences_Payment")]
        public PersonConferences_Payment PersonConferences_Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Payment>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConferences_Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Payment>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConferences_Payment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonConferences_Payment> PersonConferences_PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConferences_Payment>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConferences_Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonConferences_Payment>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConferences_Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonConferenceAbstract", "Abstract")]
        public EntityCollection<Abstract> Abstracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Abstract>("ConferenceModel.PersonConferenceAbstract", "Abstract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Abstract>("ConferenceModel.PersonConferenceAbstract", "Abstract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="PersonConferences_Detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonConferences_Detail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonConferences_Detail object.
        /// </summary>
        /// <param name="personConferenceId">Initial value of the PersonConferenceId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="isBadge">Initial value of the IsBadge property.</param>
        /// <param name="isArrive">Initial value of the IsArrive property.</param>
        /// <param name="isAbstract">Initial value of the IsAbstract property.</param>
        /// <param name="isNeedBadge">Initial value of the IsNeedBadge property.</param>
        /// <param name="isAutoreg">Initial value of the IsAutoreg property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static PersonConferences_Detail CreatePersonConferences_Detail(global::System.Guid personConferenceId, global::System.Guid rankId, global::System.Guid companyId, global::System.Boolean isBadge, global::System.Boolean isArrive, global::System.Boolean isAbstract, global::System.Boolean isNeedBadge, global::System.Boolean isAutoreg, global::System.Int32 sourceId)
        {
            PersonConferences_Detail personConferences_Detail = new PersonConferences_Detail();
            personConferences_Detail.PersonConferenceId = personConferenceId;
            personConferences_Detail.RankId = rankId;
            personConferences_Detail.CompanyId = companyId;
            personConferences_Detail.IsBadge = isBadge;
            personConferences_Detail.IsArrive = isArrive;
            personConferences_Detail.IsAbstract = isAbstract;
            personConferences_Detail.IsNeedBadge = isNeedBadge;
            personConferences_Detail.IsAutoreg = isAutoreg;
            personConferences_Detail.SourceId = sourceId;
            return personConferences_Detail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonConferenceId
        {
            get
            {
                return _PersonConferenceId;
            }
            set
            {
                if (_PersonConferenceId != value)
                {
                    OnPersonConferenceIdChanging(value);
                    ReportPropertyChanging("PersonConferenceId");
                    _PersonConferenceId = StructuralObject.SetValidValue(value, "PersonConferenceId");
                    ReportPropertyChanged("PersonConferenceId");
                    OnPersonConferenceIdChanged();
                }
            }
        }
        private global::System.Guid _PersonConferenceId;
        partial void OnPersonConferenceIdChanging(global::System.Guid value);
        partial void OnPersonConferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value, "RankId");
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Guid _RankId;
        partial void OnRankIdChanging(global::System.Guid value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Guid _CompanyId;
        partial void OnCompanyIdChanging(global::System.Guid value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBadge
        {
            get
            {
                return _IsBadge;
            }
            set
            {
                OnIsBadgeChanging(value);
                ReportPropertyChanging("IsBadge");
                _IsBadge = StructuralObject.SetValidValue(value, "IsBadge");
                ReportPropertyChanged("IsBadge");
                OnIsBadgeChanged();
            }
        }
        private global::System.Boolean _IsBadge;
        partial void OnIsBadgeChanging(global::System.Boolean value);
        partial void OnIsBadgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsArrive
        {
            get
            {
                return _IsArrive;
            }
            set
            {
                OnIsArriveChanging(value);
                ReportPropertyChanging("IsArrive");
                _IsArrive = StructuralObject.SetValidValue(value, "IsArrive");
                ReportPropertyChanged("IsArrive");
                OnIsArriveChanged();
            }
        }
        private global::System.Boolean _IsArrive;
        partial void OnIsArriveChanging(global::System.Boolean value);
        partial void OnIsArriveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateArrive
        {
            get
            {
                return _DateArrive;
            }
            set
            {
                OnDateArriveChanging(value);
                ReportPropertyChanging("DateArrive");
                _DateArrive = StructuralObject.SetValidValue(value, "DateArrive");
                ReportPropertyChanged("DateArrive");
                OnDateArriveChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateArrive;
        partial void OnDateArriveChanging(Nullable<global::System.DateTime> value);
        partial void OnDateArriveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAbstract
        {
            get
            {
                return _IsAbstract;
            }
            set
            {
                OnIsAbstractChanging(value);
                ReportPropertyChanging("IsAbstract");
                _IsAbstract = StructuralObject.SetValidValue(value, "IsAbstract");
                ReportPropertyChanged("IsAbstract");
                OnIsAbstractChanged();
            }
        }
        private global::System.Boolean _IsAbstract;
        partial void OnIsAbstractChanging(global::System.Boolean value);
        partial void OnIsAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNeedBadge
        {
            get
            {
                return _IsNeedBadge;
            }
            set
            {
                OnIsNeedBadgeChanging(value);
                ReportPropertyChanging("IsNeedBadge");
                _IsNeedBadge = StructuralObject.SetValidValue(value, "IsNeedBadge");
                ReportPropertyChanged("IsNeedBadge");
                OnIsNeedBadgeChanged();
            }
        }
        private global::System.Boolean _IsNeedBadge;
        partial void OnIsNeedBadgeChanging(global::System.Boolean value);
        partial void OnIsNeedBadgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAutoreg
        {
            get
            {
                return _IsAutoreg;
            }
            set
            {
                OnIsAutoregChanging(value);
                ReportPropertyChanging("IsAutoreg");
                _IsAutoreg = StructuralObject.SetValidValue(value, "IsAutoreg");
                ReportPropertyChanged("IsAutoreg");
                OnIsAutoregChanged();
            }
        }
        private global::System.Boolean _IsAutoreg;
        partial void OnIsAutoregChanging(global::System.Boolean value);
        partial void OnIsAutoregChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_CompanyPersonConferenceDetail", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceDetail", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceDetail", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceDetail", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceDetail", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Detail_inherits_PersonConference", "PersonConference")]
        public PersonConference PersonConference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonConference> PersonConferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonConference>("ConferenceModel.FK_Detail_inherits_PersonConference", "PersonConference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_RankPersonConferenceDetail", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("ConferenceModel.FK_RankPersonConferenceDetail", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("ConferenceModel.FK_RankPersonConferenceDetail", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("ConferenceModel.FK_RankPersonConferenceDetail", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("ConferenceModel.FK_RankPersonConferenceDetail", "Rank", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="PersonConferences_Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonConferences_Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonConferences_Payment object.
        /// </summary>
        /// <param name="paymentTypeId">Initial value of the PaymentTypeId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="money">Initial value of the Money property.</param>
        /// <param name="isComplect">Initial value of the IsComplect property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="personConferenceId">Initial value of the PersonConferenceId property.</param>
        /// <param name="orderStatusId">Initial value of the OrderStatusId property.</param>
        public static PersonConferences_Payment CreatePersonConferences_Payment(global::System.Guid paymentTypeId, global::System.Guid companyId, global::System.Decimal money, global::System.Boolean isComplect, global::System.Int32 orderNumber, global::System.Int32 sourceId, global::System.Guid personConferenceId, global::System.Guid orderStatusId)
        {
            PersonConferences_Payment personConferences_Payment = new PersonConferences_Payment();
            personConferences_Payment.PaymentTypeId = paymentTypeId;
            personConferences_Payment.CompanyId = companyId;
            personConferences_Payment.Money = money;
            personConferences_Payment.IsComplect = isComplect;
            personConferences_Payment.OrderNumber = orderNumber;
            personConferences_Payment.SourceId = sourceId;
            personConferences_Payment.PersonConferenceId = personConferenceId;
            personConferences_Payment.OrderStatusId = orderStatusId;
            return personConferences_Payment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PaymentTypeId
        {
            get
            {
                return _PaymentTypeId;
            }
            set
            {
                OnPaymentTypeIdChanging(value);
                ReportPropertyChanging("PaymentTypeId");
                _PaymentTypeId = StructuralObject.SetValidValue(value, "PaymentTypeId");
                ReportPropertyChanged("PaymentTypeId");
                OnPaymentTypeIdChanged();
            }
        }
        private global::System.Guid _PaymentTypeId;
        partial void OnPaymentTypeIdChanging(global::System.Guid value);
        partial void OnPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Guid _CompanyId;
        partial void OnCompanyIdChanging(global::System.Guid value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentDocument
        {
            get
            {
                return _PaymentDocument;
            }
            set
            {
                OnPaymentDocumentChanging(value);
                ReportPropertyChanging("PaymentDocument");
                _PaymentDocument = StructuralObject.SetValidValue(value, true, "PaymentDocument");
                ReportPropertyChanged("PaymentDocument");
                OnPaymentDocumentChanged();
            }
        }
        private global::System.String _PaymentDocument;
        partial void OnPaymentDocumentChanging(global::System.String value);
        partial void OnPaymentDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Money
        {
            get
            {
                return _Money;
            }
            set
            {
                OnMoneyChanging(value);
                ReportPropertyChanging("Money");
                _Money = StructuralObject.SetValidValue(value, "Money");
                ReportPropertyChanged("Money");
                OnMoneyChanged();
            }
        }
        private global::System.Decimal _Money;
        partial void OnMoneyChanging(global::System.Decimal value);
        partial void OnMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsComplect
        {
            get
            {
                return _IsComplect;
            }
            set
            {
                OnIsComplectChanging(value);
                ReportPropertyChanging("IsComplect");
                _IsComplect = StructuralObject.SetValidValue(value, "IsComplect");
                ReportPropertyChanged("IsComplect");
                OnIsComplectChanged();
            }
        }
        private global::System.Boolean _IsComplect;
        partial void OnIsComplectChanging(global::System.Boolean value);
        partial void OnIsComplectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, "OrderNumber");
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonConferenceId
        {
            get
            {
                return _PersonConferenceId;
            }
            set
            {
                if (_PersonConferenceId != value)
                {
                    OnPersonConferenceIdChanging(value);
                    ReportPropertyChanging("PersonConferenceId");
                    _PersonConferenceId = StructuralObject.SetValidValue(value, "PersonConferenceId");
                    ReportPropertyChanged("PersonConferenceId");
                    OnPersonConferenceIdChanged();
                }
            }
        }
        private global::System.Guid _PersonConferenceId;
        partial void OnPersonConferenceIdChanging(global::System.Guid value);
        partial void OnPersonConferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrderStatusId
        {
            get
            {
                return _OrderStatusId;
            }
            set
            {
                OnOrderStatusIdChanging(value);
                ReportPropertyChanging("OrderStatusId");
                _OrderStatusId = StructuralObject.SetValidValue(value, "OrderStatusId");
                ReportPropertyChanged("OrderStatusId");
                OnOrderStatusIdChanged();
            }
        }
        private global::System.Guid _OrderStatusId;
        partial void OnOrderStatusIdChanging(global::System.Guid value);
        partial void OnOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_CompanyPersonConferenceMoney", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceMoney", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceMoney", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceMoney", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("ConferenceModel.FK_CompanyPersonConferenceMoney", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_PaymentTypePersonConferenceMoney", "PaymentType")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PaymentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("ConferenceModel.FK_PaymentTypePersonConferenceMoney", "PaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_Payment_inherits_PersonConference", "PersonConference")]
        public PersonConference PersonConference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonConference> PersonConferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonConference>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonConference>("ConferenceModel.FK_Payment_inherits_PersonConference", "PersonConference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "OrderStatusPersonConferences_Payment", "OrderStatus")]
        public OrderStatus OrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("ConferenceModel.OrderStatusPersonConferences_Payment", "OrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("ConferenceModel.OrderStatusPersonConferences_Payment", "OrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatus> OrderStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("ConferenceModel.OrderStatusPersonConferences_Payment", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatus>("ConferenceModel.OrderStatusPersonConferences_Payment", "OrderStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Phone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactTypeId">Initial value of the ContactTypeId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Phone CreatePhone(global::System.Guid id, global::System.Guid contactTypeId, global::System.String number, global::System.Int32 sourceId, global::System.Guid personId)
        {
            Phone phone = new Phone();
            phone.Id = id;
            phone.ContactTypeId = contactTypeId;
            phone.Number = number;
            phone.SourceId = sourceId;
            phone.PersonId = personId;
            return phone;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactTypeId
        {
            get
            {
                return _ContactTypeId;
            }
            set
            {
                OnContactTypeIdChanging(value);
                ReportPropertyChanging("ContactTypeId");
                _ContactTypeId = StructuralObject.SetValidValue(value, "ContactTypeId");
                ReportPropertyChanged("ContactTypeId");
                OnContactTypeIdChanged();
            }
        }
        private global::System.Guid _ContactTypeId;
        partial void OnContactTypeIdChanging(global::System.Guid value);
        partial void OnContactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value, "PersonId");
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "ContactTypePhone", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypePhone", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypePhone", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("ConferenceModel.ContactTypePhone", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("ConferenceModel.ContactTypePhone", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "PersonPhone", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPhone", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPhone", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ConferenceModel.PersonPhone", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ConferenceModel.PersonPhone", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Propertie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Propertie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Propertie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="valueString">Initial value of the ValueString property.</param>
        /// <param name="valueLogic">Initial value of the ValueLogic property.</param>
        /// <param name="valueDate">Initial value of the ValueDate property.</param>
        /// <param name="valueInt">Initial value of the ValueInt property.</param>
        /// <param name="valueDecimal">Initial value of the ValueDecimal property.</param>
        /// <param name="valueGuid">Initial value of the ValueGuid property.</param>
        public static Propertie CreatePropertie(global::System.Guid id, global::System.String name, global::System.String valueString, global::System.Boolean valueLogic, global::System.DateTime valueDate, global::System.Int32 valueInt, global::System.Decimal valueDecimal, global::System.Guid valueGuid)
        {
            Propertie propertie = new Propertie();
            propertie.Id = id;
            propertie.Name = name;
            propertie.ValueString = valueString;
            propertie.ValueLogic = valueLogic;
            propertie.ValueDate = valueDate;
            propertie.ValueInt = valueInt;
            propertie.ValueDecimal = valueDecimal;
            propertie.ValueGuid = valueGuid;
            return propertie;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ValueString
        {
            get
            {
                return _ValueString;
            }
            set
            {
                OnValueStringChanging(value);
                ReportPropertyChanging("ValueString");
                _ValueString = StructuralObject.SetValidValue(value, false, "ValueString");
                ReportPropertyChanged("ValueString");
                OnValueStringChanged();
            }
        }
        private global::System.String _ValueString;
        partial void OnValueStringChanging(global::System.String value);
        partial void OnValueStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ValueLogic
        {
            get
            {
                return _ValueLogic;
            }
            set
            {
                OnValueLogicChanging(value);
                ReportPropertyChanging("ValueLogic");
                _ValueLogic = StructuralObject.SetValidValue(value, "ValueLogic");
                ReportPropertyChanged("ValueLogic");
                OnValueLogicChanged();
            }
        }
        private global::System.Boolean _ValueLogic;
        partial void OnValueLogicChanging(global::System.Boolean value);
        partial void OnValueLogicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValueDate
        {
            get
            {
                return _ValueDate;
            }
            set
            {
                OnValueDateChanging(value);
                ReportPropertyChanging("ValueDate");
                _ValueDate = StructuralObject.SetValidValue(value, "ValueDate");
                ReportPropertyChanged("ValueDate");
                OnValueDateChanged();
            }
        }
        private global::System.DateTime _ValueDate;
        partial void OnValueDateChanging(global::System.DateTime value);
        partial void OnValueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueInt
        {
            get
            {
                return _ValueInt;
            }
            set
            {
                OnValueIntChanging(value);
                ReportPropertyChanging("ValueInt");
                _ValueInt = StructuralObject.SetValidValue(value, "ValueInt");
                ReportPropertyChanged("ValueInt");
                OnValueIntChanged();
            }
        }
        private global::System.Int32 _ValueInt;
        partial void OnValueIntChanging(global::System.Int32 value);
        partial void OnValueIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueDecimal
        {
            get
            {
                return _ValueDecimal;
            }
            set
            {
                OnValueDecimalChanging(value);
                ReportPropertyChanging("ValueDecimal");
                _ValueDecimal = StructuralObject.SetValidValue(value, "ValueDecimal");
                ReportPropertyChanged("ValueDecimal");
                OnValueDecimalChanged();
            }
        }
        private global::System.Decimal _ValueDecimal;
        partial void OnValueDecimalChanging(global::System.Decimal value);
        partial void OnValueDecimalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ValueGuid
        {
            get
            {
                return _ValueGuid;
            }
            set
            {
                OnValueGuidChanging(value);
                ReportPropertyChanging("ValueGuid");
                _ValueGuid = StructuralObject.SetValidValue(value, "ValueGuid");
                ReportPropertyChanged("ValueGuid");
                OnValueGuidChanged();
            }
        }
        private global::System.Guid _ValueGuid;
        partial void OnValueGuidChanging(global::System.Guid value);
        partial void OnValueGuidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rank object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Rank CreateRank(global::System.Guid id, global::System.String code, global::System.String name, global::System.Int32 sourceId)
        {
            Rank rank = new Rank();
            rank.Id = id;
            rank.Code = code;
            rank.Name = name;
            rank.SourceId = sourceId;
            return rank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_RankPersonConferenceDetail", "PersonConferences_Detail")]
        public EntityCollection<PersonConferences_Detail> PersonConferences_Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonConferences_Detail>("ConferenceModel.FK_RankPersonConferenceDetail", "PersonConferences_Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonConferences_Detail>("ConferenceModel.FK_RankPersonConferenceDetail", "PersonConferences_Detail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="ScienceDegree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScienceDegree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScienceDegree object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static ScienceDegree CreateScienceDegree(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            ScienceDegree scienceDegree = new ScienceDegree();
            scienceDegree.Id = id;
            scienceDegree.Name = name;
            scienceDegree.Code = code;
            scienceDegree.SourceId = sourceId;
            return scienceDegree;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceDegreePerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_ScienceDegreePerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_ScienceDegreePerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="ScienceStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScienceStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScienceStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static ScienceStatus CreateScienceStatus(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            ScienceStatus scienceStatus = new ScienceStatus();
            scienceStatus.Id = id;
            scienceStatus.Name = name;
            scienceStatus.Code = code;
            scienceStatus.SourceId = sourceId;
            return scienceStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceStatusPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_ScienceStatusPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_ScienceStatusPerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Sex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sex object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Sex CreateSex(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            Sex sex = new Sex();
            sex.Id = id;
            sex.Name = name;
            sex.Code = code;
            sex.SourceId = sourceId;
            return sex;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SexPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_SexPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_SexPerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Speciality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speciality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speciality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        public static Speciality CreateSpeciality(global::System.Guid id, global::System.String name, global::System.String code, global::System.Int32 sourceId)
        {
            Speciality speciality = new Speciality();
            speciality.Id = id;
            speciality.Name = name;
            speciality.Code = code;
            speciality.SourceId = sourceId;
            return speciality;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private global::System.Int32 _SourceId;
        partial void OnSourceIdChanging(global::System.Int32 value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SpecialityPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_SpecialityPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_SpecialityPerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String fullName, global::System.String name, global::System.String password, global::System.String role, global::System.String email)
        {
            User user = new User();
            user.Id = id;
            user.FullName = fullName;
            user.Name = name;
            user.Password = password;
            user.Role = role;
            user.Email = email;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false, "Role");
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value, "SourceId");
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value, "DateAdd");
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdd;
        partial void OnDateAddChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value, "DateUpdate");
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User1
        {
            get
            {
                return _User1;
            }
            set
            {
                OnUser1Changing(value);
                ReportPropertyChanging("User1");
                _User1 = StructuralObject.SetValidValue(value, true, "User1");
                ReportPropertyChanged("User1");
                OnUser1Changed();
            }
        }
        private global::System.String _User1;
        partial void OnUser1Changing(global::System.String value);
        partial void OnUser1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "UserAbstractWork", "AbstractWork")]
        public EntityCollection<AbstractWork> AbstractWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AbstractWork>("ConferenceModel.UserAbstractWork", "AbstractWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AbstractWork>("ConferenceModel.UserAbstractWork", "AbstractWork", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
