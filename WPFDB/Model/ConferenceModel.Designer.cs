//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using WPFDB.Data;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_ScienceDegreePerson", "ScienceDegrees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ScienceDegree), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_ScienceStatusPerson", "ScienceStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.ScienceStatus), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_SexPerson", "Sexes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Sex), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]
[assembly: EdmRelationshipAttribute("ConferenceModel", "FK_SpecialityPerson", "Specialities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WPFDB.Model.Speciality), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WPFDB.Model.Person), true)]

#endregion

namespace WPFDB.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConferenceEntities : ObjectContext, IConferenceContext
    {
        #region Constructors
        public void Save()
        {
            this.SaveChanges();
        }

        /// <summary>
        /// Checks if the supplied object is tracked in this data context
        /// </summary>
        /// <param name="obj">The object to check for</param>
        /// <returns>True if the object is tracked, false otherwise</returns>
        public bool IsObjectTracked(object entity)
        {
            ObjectStateEntry ose;
            return this.ObjectStateManager.TryGetObjectStateEntry(entity, out ose);
        }
        /// <summary>
        /// Initializes a new ConferenceEntities object using the connection string found in the 'ConferenceEntities' section of the application configuration file.
        /// </summary>
        public ConferenceEntities() : base("name=ConferenceEntities", "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferenceEntities object.
        /// </summary>
        public ConferenceEntities(string connectionString) : base(connectionString, "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConferenceEntities object.
        /// </summary>
        public ConferenceEntities(EntityConnection connection) : base(connection, "ConferenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<ScienceDegree> ScienceDegrees
        {
            get
            {
                if ((_ScienceDegrees == null))
                {
                    _ScienceDegrees = base.CreateObjectSet<ScienceDegree>("ScienceDegrees");
                }
                return _ScienceDegrees;
            }
        }
        private ObjectSet<ScienceDegree> _ScienceDegrees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<ScienceStatus> ScienceStatuses
        {
            get
            {
                if ((_ScienceStatuses == null))
                {
                    _ScienceStatuses = base.CreateObjectSet<ScienceStatus>("ScienceStatuses");
                }
                return _ScienceStatuses;
            }
        }
        private ObjectSet<ScienceStatus> _ScienceStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Sex> Sexes
        {
            get
            {
                if ((_Sexes == null))
                {
                    _Sexes = base.CreateObjectSet<Sex>("Sexes");
                }
                return _Sexes;
            }
        }
        private ObjectSet<Sex> _Sexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public IObjectSet<Speciality> Specialities
        {
            get
            {
                if ((_Specialities == null))
                {
                    _Specialities = base.CreateObjectSet<Speciality>("Specialities");
                }
                return _Specialities;
            }
        }
        private ObjectSet<Speciality> _Specialities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScienceDegrees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScienceDegrees(ScienceDegree scienceDegree)
        {
            base.AddObject("ScienceDegrees", scienceDegree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScienceStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScienceStatuses(ScienceStatus scienceStatus)
        {
            base.AddObject("ScienceStatuses", scienceStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSexes(Sex sex)
        {
            base.AddObject("Sexes", sex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specialities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialities(Speciality speciality)
        {
            base.AddObject("Specialities", speciality);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="secondName">Initial value of the SecondName property.</param>
        /// <param name="thirdName">Initial value of the ThirdName property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="workPlace">Initial value of the WorkPlace property.</param>
        /// <param name="post">Initial value of the Post property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        /// <param name="scienceDegreeId">Initial value of the ScienceDegreeId property.</param>
        /// <param name="scienceStatusId">Initial value of the ScienceStatusId property.</param>
        /// <param name="sexId">Initial value of the SexId property.</param>
        public static Person CreatePerson(global::System.Guid id, global::System.String firstName, global::System.String secondName, global::System.String thirdName, global::System.String birthDate, global::System.String workPlace, global::System.String post, global::System.Guid specialityId, global::System.Guid scienceDegreeId, global::System.Guid scienceStatusId, global::System.Guid sexId)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.SecondName = secondName;
            person.ThirdName = thirdName;
            person.BirthDate = birthDate;
            person.WorkPlace = workPlace;
            person.Post = post;
            person.SpecialityId = specialityId;
            person.ScienceDegreeId = scienceDegreeId;
            person.ScienceStatusId = scienceStatusId;
            person.SexId = sexId;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, false, "SecondName");
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThirdName
        {
            get
            {
                return _ThirdName;
            }
            set
            {
                OnThirdNameChanging(value);
                ReportPropertyChanging("ThirdName");
                _ThirdName = StructuralObject.SetValidValue(value, false, "ThirdName");
                ReportPropertyChanged("ThirdName");
                OnThirdNameChanged();
            }
        }
        private global::System.String _ThirdName;
        partial void OnThirdNameChanging(global::System.String value);
        partial void OnThirdNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, false, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.String _BirthDate;
        partial void OnBirthDateChanging(global::System.String value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, false, "WorkPlace");
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, false, "Post");
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value, "SpecialityId");
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScienceDegreeId
        {
            get
            {
                return _ScienceDegreeId;
            }
            set
            {
                OnScienceDegreeIdChanging(value);
                ReportPropertyChanging("ScienceDegreeId");
                _ScienceDegreeId = StructuralObject.SetValidValue(value, "ScienceDegreeId");
                ReportPropertyChanged("ScienceDegreeId");
                OnScienceDegreeIdChanged();
            }
        }
        private global::System.Guid _ScienceDegreeId;
        partial void OnScienceDegreeIdChanging(global::System.Guid value);
        partial void OnScienceDegreeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScienceStatusId
        {
            get
            {
                return _ScienceStatusId;
            }
            set
            {
                OnScienceStatusIdChanging(value);
                ReportPropertyChanging("ScienceStatusId");
                _ScienceStatusId = StructuralObject.SetValidValue(value, "ScienceStatusId");
                ReportPropertyChanged("ScienceStatusId");
                OnScienceStatusIdChanged();
            }
        }
        private global::System.Guid _ScienceStatusId;
        partial void OnScienceStatusIdChanging(global::System.Guid value);
        partial void OnScienceStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SexId
        {
            get
            {
                return _SexId;
            }
            set
            {
                OnSexIdChanging(value);
                ReportPropertyChanging("SexId");
                _SexId = StructuralObject.SetValidValue(value, "SexId");
                ReportPropertyChanged("SexId");
                OnSexIdChanged();
            }
        }
        private global::System.Guid _SexId;
        partial void OnSexIdChanging(global::System.Guid value);
        partial void OnSexIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceDegreePerson", "ScienceDegrees")]
        public ScienceDegree ScienceDegree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScienceDegree> ScienceDegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScienceDegree>("ConferenceModel.FK_ScienceDegreePerson", "ScienceDegrees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceStatusPerson", "ScienceStatuses")]
        public ScienceStatus ScienceStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScienceStatus> ScienceStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScienceStatus>("ConferenceModel.FK_ScienceStatusPerson", "ScienceStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SexPerson", "Sexes")]
        public Sex Sex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sex> SexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sex>("ConferenceModel.FK_SexPerson", "Sexes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SpecialityPerson", "Specialities")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("ConferenceModel.FK_SpecialityPerson", "Specialities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="ScienceDegree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScienceDegree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScienceDegree object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ScienceDegree CreateScienceDegree(global::System.Guid id, global::System.String name)
        {
            ScienceDegree scienceDegree = new ScienceDegree();
            scienceDegree.Id = id;
            scienceDegree.Name = name;
            return scienceDegree;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceDegreePerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_ScienceDegreePerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_ScienceDegreePerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="ScienceStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScienceStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScienceStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ScienceStatus CreateScienceStatus(global::System.Guid id, global::System.String name)
        {
            ScienceStatus scienceStatus = new ScienceStatus();
            scienceStatus.Id = id;
            scienceStatus.Name = name;
            return scienceStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_ScienceStatusPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_ScienceStatusPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_ScienceStatusPerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Sex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sex object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Sex CreateSex(global::System.Guid id, global::System.String name)
        {
            Sex sex = new Sex();
            sex.Id = id;
            sex.Name = name;
            return sex;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SexPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_SexPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_SexPerson", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConferenceModel", Name="Speciality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speciality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speciality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Speciality CreateSpeciality(global::System.Guid id, global::System.String name)
        {
            Speciality speciality = new Speciality();
            speciality.Id = id;
            speciality.Name = name;
            return speciality;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConferenceModel", "FK_SpecialityPerson", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ConferenceModel.FK_SpecialityPerson", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ConferenceModel.FK_SpecialityPerson", "Persons", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
